#Todo# Ended elements moved at  __UpdateLog.txt and insert upper at docment.

[190822]#Todo_毎日確認/Rep PSB_LM.xmind　?　plantUMLでできないか？
[190822]#Todo_1日1回必ずコミット&GitやUnOrg整理
[200825]#Todo_設計が大事(段取り8割)　UML頑張る

[200819]#Dev_最適化アルゴリズム実装←インターフェイス実装←Deapに関する調査
[190822]#Dev_出力や調査結果を見やすく可視化←jupytorで記録としてまとめる

[200813]#seach_マルチタイムフレーム分析のためにスレッド機能を調べてみる
[200813]#seach_プログレスバーなどで同時並行処理がしたい→GUI実装の勉強

[200906]#info_時間管理術をコンテンツにして発信集計アプリがなければ自作
[200903]#info_Qiitaでplantuml使用上のコツとかまとめてみる
[200903]#info_Qiitaで自分用Gitの使い方をまとめてみる
[200903]#info_スキルシートを作る　知見概念の有無レベル等
[200903]#info_机・椅子キーボード周りの開発環境についてのメモ
[200903]#info_Githubにて自分のTodoの公開

[190828]#Idea_長期トレンド戦略検証　できれば複数パラメーター　PSBをOneMax問題対応
[190823]#Idea_検証記録の正規化やフォーマット化　やったことをアーカイブ化して見直す
[190823]#Idea_鞘取りペア調査環境整備
[200813]#Idea_押目by順張りシステムを構築(基本ユーロドル用)
[190902]#Idea_順張りスキャ
・新高値や新安値の少し手前周辺で連続スキャ
前の新高値安値をもう一度試しに行くことはよくあるが、
その手前で小さなレンジを作るときは高い確率で更新しにいってから反転する。
・先レンジをブレイクした時の初押しトレード
1回目の押し目はOK　2回目は駄目＝2回順行で手仕舞いandセットアップ完了

[190902]カウンタートレード
長期トレンドが不調なときの分散システム
順張りスキャとも反対の結果になるはず
[190828]長期トレンド戦略検証　利益になる銘柄が
対象銘柄利益目標70%%
PSBをOneMax問題に対応できるように拡張
[190823]各相関性の強い銘柄を対象に鞘取り
SetUp:H4orH1時間軸でバーの最初を100としてお互いの株価の変化に対する
価格の乖離チャートのレンジが定期的に交差するタイミングがあるか確認
乖離のピボットをクロスする度にリセット、
乖離チャートのクロスまでの平均乖離をカウントしている
Entry:平均乖離に到達したら高いほうをSell安いほうをBuy
Exit:乖離チャートの平均交差時間の倍を超えたら　or　乖離チャートがクロスした
Mrkt:日々の値動きの%のベクトルに相関性のあるペア(それより短い時間で広がった鞘が収束)
Todo:
01_実装の前に各銘柄の相関性を調査する準備
02_様々な銘柄から総当たりで探す環境整備
03_見つけたら短い時間足の情報収集

[190822]
高値(2日以上安値方向へ更新無)から3ATR(10)&10%以上の下落で買いセットアップ
Entry:翌日全日安値より安く寄付いたら成行買い　そうでなければ全日安値指値&不成引買
Exit:2ATR利益が出たら指値決済　エントリーした次の日に利益でなければ引成決済
PosSize:資金の10%
Mrkt:75MAより上にある成長株式銘柄

[190822]日足の髭が多いチャートで逆張りデイトレ

[190822]amznのような綺麗なモデルに対する平均回帰トレード
大きく膨らんだ時は膨らんだ期間と値動きに分散させることで柔軟性を持った逆張りエントリー
対象銘柄はAmznのような順調に成長している銘柄のマーケット

#UnOrgMemo#
### オブジェクト指向の目的は頻繁に変更されるであろう箇所をクラスに抽出するスタイル ###
#必要そうなObj
#Tester管理CL
# 最低検証時間軸
# 資産曲線

### 継承の本質はインターフェイス ###
# 継承とは、親クラスから機能を受け継ぐためのものではない 各クラスの概念そのものである
# 継承の本質は、交換可能なパーツを作成するために共通点を「規格」としてまとめ上げられるインターフェイス
#親クラスには何も実態は持たせない=インターフェイス
# 実装が伴う場合は安易にコーディングの手間を減らしてるだけ→すべてに共通する絶対変更できない部分になる
#Tester管理オブジェクトを各種検証Objに参照渡しをすることで共通データを共有させる
#
### オブジェクトコンポジションをやるべき ###
#
#Engine engine = new JetEngine();
#Handle handle = new QuickHandle();
#Brake brake = new AntilockBrake();
#Wheel wheel = new StudlessWheel();

#Car car = new Car(engine, handle, brake, wheel);
#
### オブジェクトコンポジション　ここまで ###
#メインクラスかファクトリやクリエイトにてのみNewを使用する
#テスタークラス(メイン)の中でのみオブジェクト宣言(New)を行う
#検証対象マーケットObjをリストにする
#検証対象マーケットObjの中に売買マーケットリストと参照マーケットリストを作る

#対象マーケットの最低検証時間軸に応じてカウントを進めていく
#各マーケットの時間足がそれ以上だとしても管理Objに設定された最低検証時間軸を基準に動かす

#管理Objに含めたいもの
# pythonでは全て参照渡し(ポインタ)なので意図しない変更がされてしまうリスクがある。
# mutableでiterableであるものを参照渡しの意義でつかう
# imutableでiterableであるものを自動変数にする
#以上のことから変更されるとまずいものは基本的にimutableな型で定義しておくべき
#本当に参照渡しにしたい場合はmutableな型で定義するべし。
#ただ、双方向の疎結合要素を減らすことを考慮するならimutableを極力採用する

#Done#
[190902]@gauxu
・SystemTester.pyを熟読
MMの検証手段整理しつつ各種最適化された検証手続きをするための方法を探る
ポイントを抑えた変数や関数のメモをMMに記述
・検証手段の整理と確認のためMMの検証項目を追加・整理
戦略分散化のための考えの整理
・#AnalyzeIdea#を3つ作成

[190828]@gauxu
・Anaconda削除&venvの導入
GAでOneMax問題を解く環境がAnacondaのパッケージ入ってないから
今後はenv\Scripts\activate.batとenv\Scripts\deactivate.batを利用
Anaconda使用を止め、venvとpipのみで管理
GAのパッケージであるdeapを無事に動かせるようになった。
サンプルプログラムGA.pyの実行にて確認。
※VSCの実行環境では仮想環境の選択はできるが、
ターミナルで直接venvの変更は無理なことが分かった。
・__pycache__の削除
・jupyterNotebookのマークアップ領域に改行コードを追加
マークアップ領域ではhtmlの改行コードで書くこと

[190824]@gauxu
米国自動車株比較の良いサンプルコードがあったので
それを参考にViewRsltMod内にJupyterプロジェクト作成

[190823]@gauxu
鞘取りのロジックと調査作業の段取りの概要を固めTodoに入れてみた

[190822]@gauxu
MMをプロジェクトと同じ名前でロードマップ「PSB_LM」作成
__Todoや各項目を設定したドキュメントファイルの設定

[20190821]@gauxu
PSBリモートリポジトリに__ReservedWords.txt追加
__memoにルール手順に変更　具体的な更新手順記述
リモートリポジトリの出力結果ファイルを完全削除

[20190810]@gauxu
PSBリモートリポジトリに__issue.txt追加

[20190809]@gauxu
GithubにOrgnize作成し、GauxuアカウントでPSBプロジェクトをコミットした。

[20190804]@gauxu
#内部スコープでglobalで宣言されてたexitPriceがglobal未定義警告出現、外部でコメントされていた「#exitPrice = list()」から#を削除。
